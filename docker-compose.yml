version: '3.8'

services:
  # Authentication Service
  auth-service:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    ports:
      - "${AUTH_SERVICE_PORT}:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db
    volumes:
      - ./services/auth-service:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  # CRM Service
  crm-service:
    build:
      context: ./services/crm-service
      dockerfile: Dockerfile
    ports:
      - "${CRM_SERVICE_PORT}:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db
    volumes:
      - ./services/crm-service:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  # Sales Service
  sales-service:
    build:
      context: ./services/sales-service
      dockerfile: Dockerfile
    ports:
      - "${SALES_SERVICE_PORT}:3000"
    environment:
      DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - db
    volumes:
      - ./services/sales-service:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped

  # Web Client (Next.js)
  web-client:
    build:
      context: ./apps/web-client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-service # Depends on a backend service to be useful
    volumes:
      - ./apps/web-client:/usr/src/app
      - /usr/src/app/node_modules
      - /usr/src/app/.next
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:13
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:

