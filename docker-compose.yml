services:
  # --- Local NPM Proxy ---
  verdaccio:
    image: verdaccio/verdaccio:5
    ports:
      - "4873:4873" # Default Verdaccio port
    volumes:
      - verdaccio_storage:/verdaccio/storage
    restart: unless-stopped

  # --- Backend Services ---
  auth-service:
    build:
      context: .
      dockerfile: services/auth-service/Dockerfile
    ports:
      - "8000:3000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - verdaccio # Depends on the proxy to be ready
    restart: unless-stopped

  crm-service:
    build:
      context: .
      dockerfile: services/crm-service/Dockerfile
    ports:
      - "8001:3000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - verdaccio
    restart: unless-stopped

  sales-service:
    build:
      context: .
      dockerfile: services/sales-service/Dockerfile
    ports:
      - "8002:3000"
    environment:
      - DATABASE_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - JWT_SECRET=${JWT_SECRET}
    depends_on:
      - db
      - verdaccio
    restart: unless-stopped

  # --- Frontend Service ---
  web-client:
    build:
      context: .
      dockerfile: apps/web-client/Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
      - verdaccio
    restart: unless-stopped

  # --- Database Service ---
  db:
    image: postgres:13
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
  verdaccio_storage:
