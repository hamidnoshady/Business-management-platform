services:
  # ------ Database Services ------
  postgres-auth:
    image: postgres:13
    container_name: postgres-auth
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: auth_db
    ports:
      - "5431:5432"
    volumes:
      - auth_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d auth_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - business_platform_net

  postgres-crm:
    image: postgres:13
    container_name: postgres-crm
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: crm_db
    ports:
      - "5432:5432"
    volumes:
      - crm_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d crm_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - business_platform_net

  postgres-sales:
    image: postgres:13
    container_name: postgres-sales
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: sales_db
    ports:
      - "5433:5432"
    volumes:
      - sales_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d sales_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - business_platform_net

  # ------ Backend Service ------
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: node dist/main
    ports:
      - "3001:3000"
    environment:
      - DATABASE_HOST_AUTH=postgres-auth
      - DATABASE_PORT_AUTH=5432
      - DATABASE_USER_AUTH=admin
      - DATABASE_PASSWORD_AUTH=admin
      - DATABASE_NAME_AUTH=auth_db
      - DATABASE_HOST_CRM=postgres-crm
      - DATABASE_PORT_CRM=5432
      - DATABASE_USER_CRM=admin
      - DATABASE_PASSWORD_CRM=admin
      - DATABASE_NAME_CRM=crm_db
      - DATABASE_HOST_SALES=postgres-sales
      - DATABASE_PORT_SALES=5432
      - DATABASE_USER_SALES=admin
      - DATABASE_PASSWORD_SALES=admin
      - DATABASE_NAME_SALES=sales_db
      - JWT_SECRET=aVeryStrongAndSecretKey123!@#ChangeMe
      - PORT=3000
    depends_on:
      postgres-auth:
        condition: service_healthy
      postgres-crm:
        condition: service_healthy
      postgres-sales:
        condition: service_healthy
    networks:
      - business_platform_net

  # ------ Frontend Service ------
  web-client:
    build:
      context: .
      dockerfile: Dockerfile.frontend.dev
    command: npm run dev --workspace=web-client
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    depends_on:
      - backend
    networks:
      - business_platform_net

# ------ Volume Definitions ------
volumes:
  auth_db_data:
  crm_db_data:
  sales_db_data:

# ------ Network Definition ------
networks:
  business_platform_net:
    driver: bridge
